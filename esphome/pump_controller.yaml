esphome:
  name: pump-controller
  friendly_name: Pump Controller
  libraries:
    - "SPI"
    - "Ticker"
    - "SX126x-Arduino"
  on_boot:
    - priority: 1000
      then:
        - lambda: |-
            pinMode(36, OUTPUT);
            digitalWrite(36, LOW);
            // Heltec delays for 100ms in their example
            delay(100);
font:
  - file: "gfonts://Roboto"
    id: font_small
    size: 12
  - file: "gfonts://Roboto"
    id: font_large
    size: 20

i2c:
  sda: GPIO17
  scl: GPIO18

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

external_components:
  - source:
      type: git
      url: https://github.com/PaulSchulz/esphome-lora-sx126x
      ref: main
    components: ["lora_sx126x"]

logger:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Pump-Controller Fallback Hotspot"
    password: "iCa8p1AhO9VJ"
    
ota:
  - platform: esphome
    password: "acd8fa2e4abf818a11fa0bf186a9f4f2"

api:
  encryption:
    key: "tFR5y8xK0muiodXbxCJOwdh48XApx7XnF3njaC5BI0g="

web_server:
  port: 80

lora_sx126x:
  rf_frequency: 915000000
  pin_lora_reset: 12
  pin_lora_dio_1: 14
  pin_lora_busy: 13
  pin_lora_nss: 8
  pin_lora_sclk: 9
  pin_lora_miso: 11
  pin_lora_mosi: 10

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "IP Address"
      id: wifi_ip

sensor:
  - platform: lora_sx126x
    id: lora_rssi
    name: "LoRa RSSI"

display:
  - platform: ssd1306_i2c
    id: oled
    model: "SSD1306 128x64"
    address: 0x3C
    reset_pin: GPIO21
    update_interval: 1s
    pages:
#      - id: page_startup
#        lambda: |-
#          it.printf(0, 20, id(font_large), "%s", App.get_name().c_str());
#          it.printf(0, 44, id(font_small), "Starting...");
      - id: page_main
        lambda: |-
          it.printf(0, 0, id(font_small), "IP: %s", id(wifi_ip).state.c_str());
          it.printf(0, 16, id(font_small), "RSSI: %.0f", id(lora_rssi).state);
          bool pump_on = id(pump_control_switch).state;
          it.printf(0, 32, id(font_small), "Pump: %s", pump_on ? "ON" : "OFF");

#interval:
#  - id: startup_display_timer
#    interval: 5s
#    then:
#      - display.page.show_next: oled
#      - interval.stop: startup_display_timer

switch:
  - platform: lora_sx126x
    id: pump_control_switch
    name: "Pump Control"
#    on_msg: "PUMP_ON"
#    off_msg: "PUMP_OFF"
    optimistic: true
